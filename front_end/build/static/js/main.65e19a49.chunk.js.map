{"version":3,"sources":["logo.svg","views/newgamebox.js","App.js","reportWebVitals.js","index.js"],"names":["axios_instance","axios","create","baseURL","method","customStyles","container","base","flex","input","color","control","state","background","borderRadius","isFocused","boxShadow","singleValue","menu","marginTop","menuList","padding","NewGameBox","props","sports","games","streams","isLoadingCategory","isLoadingGame","isLoadingStream","stream_value","stream_link","asset_type","link","post","JSON","stringify","then","res","setState","data","message","categories","a","this","query_data_information","value","stream","width","height","cellpadding","cellspacing","bgcolor","align","allowFullScreen","scrolling","frameborder","src","style","placeholder","options","styles","onChange","opt","menu_item_selection","isLoading","formatOptionLabel","label","date","championship","create_iframe","Component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65e19a49.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\n\n\nconst axios_instance = axios.create({\n    baseURL: 'http://localhost:3001/',\n    method: 'POST',\n});\n\n\nconst customStyles = {\n    container: base => ({\n        ...base,\n        flex: 1\n    }),\n    input: base => ({\n        ...base,\n        color: \"white\"\n    }),\n    control: (base, state) => ({\n        ...base,\n        background: \"#023950\",\n        // match with the menu\n        borderRadius: state.isFocused ? \"3px 3px 0 0\" : 3,\n        // Overwrittes the different states of border\n        //borderColor: state.isFocused ? \"yellow\" : \"blue\",\n        // Removes weird border around container\n        boxShadow: state.isFocused ? null : null,\n            \"&:hover\": {\n              // Overwrittes the different states of border\n              //borderColor: state.isFocused ? \"red\" : \"blue\"\n        },\n        color: \"white\",\n    }),\n    singleValue: base => ({\n        ...base,\n        color: \"white\"\n    }),\n    menu: base => ({\n      ...base,\n      // override border radius to match the box\n      borderRadius: 0,\n      // kill the gap\n      marginTop: 0,\n      background: \"#023950\",\n      color: \"white\"\n      \n    }),\n    menuList: base => ({\n      ...base,\n      // kill the white space on first and last option\n      padding: 0,\n    })\n  };\n\n\nclass NewGameBox extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sports: [],\n            games: [],\n            streams: [],\n            isLoadingCategory: true,\n            isLoadingGame: false,\n            isLoadingStream: false,\n            stream_value: \"\",\n            stream_link: \"\"\n        };\n    }\n\n    query_data_information(asset_type, link) {\n        axios_instance\n        .post(\n            'api/item',\n            JSON.stringify({'type': asset_type, \"info\": {'link': link}})\n        )\n        .then(res => {\n                if (asset_type == \"game\"){\n                    this.setState({ streams: res.data.message });\n                    this.setState({ isLoadingGame: false});\n                }\n                if (asset_type == \"main\"){ \n                    this.setState({ sports: res.data.message.categories });\n                    this.setState({ games: res.data.message.games });\n                    this.setState({ isLoadingCategory: false});\n                }\n                if (asset_type == \"stream\"){\n                    this.setState({ stream_link: res.data.message});\n                    this.setState({ isLoadingStream: false});\n                }\n            }\n        )\n    }\n    \n    async componentDidMount(){\n        this.query_data_information('main', '/enx/allupcomingsports/1/');\n    }\n\n    menu_item_selection(link, asset_type, value) {\n        if (asset_type == \"main\"){\n            this.setState({ games: [] });\n            this.setState({ streams: []});\n            this.setState({ isLoadingCategory: true });\n        }\n        if (asset_type == \"game\"){\n            this.setState({ stream_value: \"\"});\n            this.setState({ streams: []});\n            this.setState({ isLoadingGame: true });\n        }\n        if (asset_type == \"stream\"){\n            this.setState({ stream_value: value});\n            this.setState({ stream: []})\n            this.setState({ isLoadingStream: true });\n        }\n        this.query_data_information(asset_type, link);\n    }\n\n    create_iframe(link){\n        if (link){\n            return (\n                <table width=\"100%\" height=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n                    <td bgcolor=\"#000d1a\" align=\"center\">\n                        <iframe\n                         allowFullScreen=\"true\"\n                         scrolling=\"no\"\n                         frameborder=\"0\"\n                         width=\"700\"\n                         height=\"480\"\n                         src={link[0]}>\n                        </iframe>\n                    </td>\n                </table>\n            );\n        }else{\n            return ;\n        }\n    }\n\n    render(){\n        const formatGames = ({label, date, championship}) => (\n            <div>\n            <h4>{label}</h4>\n            <h6>{date+\" \"+championship}</h6>\n            </div>\n        );\n        \n        return(\n            <div style={{width: \"700px\"}}>\n                <Select\n                 placeholder=\"Select Sport...\"\n                 options={this.state.sports}\n                 styles={customStyles}\n                 onChange={\n                     opt =>\n                     this.menu_item_selection(opt.link, \"main\", opt.value)\n                    }\n                 isLoading={this.state.isLoadingCategory}\n                 />\n                <Select\n                 placeholder=\"Select Game...\" \n                 options={this.state.games}\n                 formatOptionLabel={formatGames}\n                 styles={customStyles}\n                 onChange={\n                     opt =>\n                     this.menu_item_selection(opt.link, \"game\", opt.value)\n                    }\n                 isLoading={this.state.isLoadingGame}\n                 />\n                <Select\n                 placeholder=\"Languages...\"\n                 options={this.state.streams}\n                 styles={customStyles}\n                 {...(this.state.stream_value ? {} : {value: \"\"})}\n                 onChange={\n                     opt =>\n                     this.menu_item_selection(opt.link, \"stream\", opt.value)\n                    }\n                 isLoading={this.state.isLoadingStream}\n                 />\n                <div>\n                    {this.create_iframe(this.state.stream_link)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default NewGameBox;","import logo from './logo.svg';\nimport './App.css';\n\nimport { Container } from 'reactstrap';\nimport NewGameBox from './views/newgamebox';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <NewGameBox />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}